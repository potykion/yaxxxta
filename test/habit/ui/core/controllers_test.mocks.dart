// Mocks generated by Mockito 5.0.1 from annotations
// in yaxxxta/test/habit/ui/core/controllers_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:yaxxxta/logic/habit/db.dart' as _i2;
import 'package:yaxxxta/logic/habit/models.dart' as _i4;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [BaseHabitPerformingRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockBaseHabitPerformingRepo extends _i1.Mock
    implements _i2.BaseHabitPerformingRepo {
  MockBaseHabitPerformingRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> insert(_i4.HabitPerforming? performing) =>
      (super.noSuchMethod(Invocation.method(#insert, [performing]),
          returnValue: Future.value('')) as _i3.Future<String>);
  @override
  _i3.Future<List<_i4.HabitPerforming>> list(DateTime? from, DateTime? to) =>
      (super.noSuchMethod(Invocation.method(#list, [from, to]),
              returnValue: Future.value(<_i4.HabitPerforming>[]))
          as _i3.Future<List<_i4.HabitPerforming>>);
  @override
  _i3.Future<List<_i4.HabitPerforming>> listByHabit(String? habitId) =>
      (super.noSuchMethod(Invocation.method(#listByHabit, [habitId]),
              returnValue: Future.value(<_i4.HabitPerforming>[]))
          as _i3.Future<List<_i4.HabitPerforming>>);
  @override
  _i3.Future<void> delete(DateTime? from, DateTime? to) =>
      (super.noSuchMethod(Invocation.method(#delete, [from, to]),
          returnValue: Future.value(null),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
}
